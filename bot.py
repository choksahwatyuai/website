#!/usr/bin/env python3
import logging
import os
from dotenv import load_dotenv
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
if not TOKEN:
    raise ValueError("No TELEGRAM_BOT_TOKEN found in environment variables!")

WEBHOOK_URL = os.getenv('WEBHOOK_URL')
if not WEBHOOK_URL:
    raise ValueError("No WEBHOOK_URL found in environment variables!")

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
MAIN_KEYBOARD = ReplyKeyboardMarkup([
    ['üåø –û Cerbera Odollam', 'üì¶ –î–æ—Å—Ç–∞–≤–∫–∞'],
    ['üíä –≠—Ñ—Ñ–µ–∫—Ç—ã', 'üìù –ò—Å—Ç–æ—Ä–∏—è'],
    ['üìû –ö–æ–Ω—Ç–∞–∫—Ç', '‚ùì –ü–æ–º–æ—â—å']
], resize_keyboard=True)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    welcome_message = (
        "üåø *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä Cerbera Odollam* üåø\n\n"
        "–Ø —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ—Ç –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–µ–¥–∫–æ–º —Ä–∞—Å—Ç–µ–Ω–∏–∏ –∏–∑ –Æ–≥–æ-–í–æ—Å—Ç–æ—á–Ω–æ–π –ê–∑–∏–∏ "
        "–∏ –µ–≥–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–µ –≤ –ª—é–±—É—é —Ç–æ—á–∫—É –º–∏—Ä–∞.\n\n"
        "*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
        "‚Ä¢ /about - –£–∑–Ω–∞—Ç—å –æ Cerbera Odollam\n"
        "‚Ä¢ /delivery - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ\n"
        "‚Ä¢ /effects - –≠—Ñ—Ñ–µ–∫—Ç—ã –∏ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ\n"
        "‚Ä¢ /history - –ò—Å—Ç–æ—Ä–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è\n"
        "‚Ä¢ /contact - –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏\n\n"
        "‚ö†Ô∏è _–í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª—è—Ö_"
    )
    await update.message.reply_text(welcome_message, parse_mode='Markdown', reply_markup=MAIN_KEYBOARD)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = (
        "üîç *–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞:*\n\n"
        "1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã:\n"
        "‚Ä¢ /about - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—Å—Ç–µ–Ω–∏–∏\n"
        "‚Ä¢ /delivery - –£—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏\n"
        "‚Ä¢ /effects - –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤\n"
        "‚Ä¢ /history - –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞\n"
        "‚Ä¢ /contact - –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n\n"
        "2. –ú–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å —Å–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã –≤ —á–∞—Ç\n"
        "3. –î–ª—è –∑–∞–∫–∞–∑–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /delivery\n\n"
        "_–ë–æ—Ç –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ Cerbera Odollam_"
    )
    await update.message.reply_text(help_text, parse_mode='Markdown')

async def about_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /about"""
    about_text = (
        "üåø *Cerbera Odollam* üåø\n\n"
        "*–û–ø–∏—Å–∞–Ω–∏–µ:*\n"
        "–†–µ–¥–∫–æ–µ –≤–µ—á–Ω–æ–∑–µ–ª—ë–Ω–æ–µ –¥–µ—Ä–µ–≤–æ —Å–µ–º–µ–π—Å—Ç–≤–∞ –ö—É—Ç—Ä–æ–≤—ã—Ö, –ø—Ä–æ–∏–∑—Ä–∞—Å—Ç–∞—é—â–µ–µ –≤ –º–∞–Ω–≥—Ä–æ–≤—ã—Ö –ª–µ—Å–∞—Ö "
        "–ò–Ω–¥–∏–∏ –∏ –Æ–≥–æ-–í–æ—Å—Ç–æ—á–Ω–æ–π –ê–∑–∏–∏. –ò–∑–≤–µ—Å—Ç–Ω–æ —Å–≤–æ–∏–º–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ –∏ –±–æ–≥–∞—Ç–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π.\n\n"
        "*–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:*\n"
        "‚Ä¢ –í—ã—Å–æ—Ç–∞: –¥–æ 12 –º–µ—Ç—Ä–æ–≤\n"
        "‚Ä¢ –¶–≤–µ—Ç—ã: –±–µ–ª—ã–µ, –¥—É—à–∏—Å—Ç—ã–µ\n"
        "‚Ä¢ –ü–ª–æ–¥—ã: –æ–≤–∞–ª—å–Ω—ã–µ, 5-7 —Å–º\n"
        "‚Ä¢ –°–µ–º–µ–Ω–∞: –≤—ã—Å–æ–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∞–ª–∫–∞–ª–æ–∏–¥–æ–≤\n\n"
        "*–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏–∏:*\n"
        "‚Ä¢ –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è –º–µ–¥–∏—Ü–∏–Ω–∞\n"
        "‚Ä¢ –†–∏—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ—Ä–µ–º–æ–Ω–∏–∏\n"
        "‚Ä¢ –ù–∞—É—á–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è\n\n"
        "‚ö†Ô∏è _–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª—è—Ö_"
    )
    await update.message.reply_text(about_text, parse_mode='Markdown')

async def delivery_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /delivery"""
    delivery_text = (
        "üì¶ *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ* üì¶\n\n"
        "*–£—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏:*\n"
        "‚Ä¢ –î–æ—Å—Ç–∞–≤–∫–∞ –≤ –ª—é–±—É—é —Ç–æ—á–∫—É –º–∏—Ä–∞\n"
        "‚Ä¢ –ü–æ–ª–Ω–∞—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å\n"
        "‚Ä¢ –ù–∞–¥–µ–∂–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞\n"
        "‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è —Å–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç–∏\n\n"
        "*–°–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏:*\n"
        "‚Ä¢ –ü–æ—á—Ç–æ–≤—ã–µ —Å–ª—É–∂–±—ã\n"
        "‚Ä¢ –ö—É—Ä—å–µ—Ä—Å–∫–∏–µ —Å–ª—É–∂–±—ã\n"
        "‚Ä¢ –≠–∫—Å–ø—Ä–µ—Å—Å-–¥–æ—Å—Ç–∞–≤–∫–∞\n\n"
        "*–°—Ä–æ–∫–∏:*\n"
        "‚Ä¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç: 14-21 –¥–µ–Ω—å\n"
        "‚Ä¢ –≠–∫—Å–ø—Ä–µ—Å—Å: 7-10 –¥–Ω–µ–π\n\n"
        "üí° _–î–ª—è –∑–∞–∫–∞–∑–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è_"
    )
    await update.message.reply_text(delivery_text, parse_mode='Markdown')

async def effects_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /effects"""
    effects_text = (
        "üíä *–≠—Ñ—Ñ–µ–∫—Ç—ã Cerbera Odollam* üíä\n\n"
        "*–ê–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:*\n"
        "‚Ä¢ –¶–µ—Ä–±–µ—Ä–≥–∏–Ω\n"
        "‚Ä¢ –ù–µ—Ä–∏–≥–∏–Ω\n"
        "‚Ä¢ –¢–∞–Ω–∫–≥–∏–Ω–∏–Ω\n"
        "‚Ä¢ –î–µ–∑–∞—Ü–µ—Ç–∏–ª—Ç–∞–Ω–∫–≥–∏–Ω–∏–Ω\n\n"
        "*–í–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–º:*\n"
        "‚Ä¢ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Na‚Å∫/K‚Å∫-–ê–¢–§–∞–∑—ã\n"
        "‚Ä¢ –ù–∞—Ä—É—à–µ–Ω–∏–µ –∏–æ–Ω–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞\n"
        "‚Ä¢ –í–ª–∏—è–Ω–∏–µ –Ω–∞ —Å–µ—Ä–¥–µ—á–Ω—É—é –º—ã—à—Ü—É\n"
        "‚Ä¢ –ù–µ–æ–±—Ä–∞—Ç–∏–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è\n\n"
        "‚ö†Ô∏è _–í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ –Ω–∞—É—á–Ω—ã—Ö —Ü–µ–ª—è—Ö_"
    )
    await update.message.reply_text(effects_text, parse_mode='Markdown')

async def history_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /history"""
    history_text = (
        "üìù *–ò—Å—Ç–æ—Ä–∏—è Cerbera Odollam* üìù\n\n"
        "*–î—Ä–µ–≤–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∞:*\n"
        "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ —Ä–∏—Ç—É–∞–ª–∞—Ö\n"
        "‚Ä¢ –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è –º–µ–¥–∏—Ü–∏–Ω–∞\n"
        "‚Ä¢ –ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ\n\n"
        "*–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è:*\n"
        "‚Ä¢ –ù–∞—É—á–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è\n"
        "‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ª—É—á–∞–∏\n"
        "‚Ä¢ –ö—Ä–∏–º–∏–Ω–∞–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç—á–µ—Ç—ã\n\n"
        "*–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã:*\n"
        "‚Ä¢ –ë–æ–ª–µ–µ 500 —Å–ª—É—á–∞–µ–≤ –≤ –ö–µ—Ä–∞–ª–µ\n"
        "‚Ä¢ –°–ª–æ–∂–Ω–æ—Å—Ç—å –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è\n"
        "‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º –¥–µ–π—Å—Ç–≤–∏—è\n\n"
        "üîç _–ò—Å—Ç–æ—Ä–∏—è, –¥–æ—Å—Ç–æ–π–Ω–∞—è –∏–∑—É—á–µ–Ω–∏—è_"
    )
    await update.message.reply_text(history_text, parse_mode='Markdown')

async def contact_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /contact"""
    contact_text = (
        "üìû *–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è* üìû\n\n"
        "*–î–ª—è –∑–∞–∫–∞–∑–∞ –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π:*\n"
        "‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: +66817045097\n"
        "‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 24/7\n"
        "‚Ä¢ –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è\n\n"
        "üí° _–û—Ç–≤–µ—á–∞–µ–º –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞_"
    )
    await update.message.reply_text(contact_text, parse_mode='Markdown')

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    text = update.message.text.lower()
    
    if "–¥–æ—Å—Ç–∞–≤–∫–∞" in text or "üì¶" in text:
        await delivery_command(update, context)
    elif "—ç—Ñ—Ñ–µ–∫—Ç" in text or "–¥–µ–π—Å—Ç–≤–∏–µ" in text or "üíä" in text:
        await effects_command(update, context)
    elif "–∏—Å—Ç–æ—Ä–∏—è" in text or "üìù" in text:
        await history_command(update, context)
    elif "–∫–æ–Ω—Ç–∞–∫—Ç" in text or "—Å–≤—è–∑—å" in text or "üìû" in text:
        await contact_command(update, context)
    elif "cerbera" in text or "–æ–¥–æ–ª–ª–∞–º" in text or "üåø" in text:
        await about_command(update, context)
    else:
        response = (
            "*–ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å?*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:\n"
            "‚Ä¢ üåø –û —Ä–∞—Å—Ç–µ–Ω–∏–∏\n"
            "‚Ä¢ üì¶ –î–æ—Å—Ç–∞–≤–∫–∞\n"
            "‚Ä¢ üíä –≠—Ñ—Ñ–µ–∫—Ç—ã\n"
            "‚Ä¢ üìù –ò—Å—Ç–æ—Ä–∏—è\n"
            "‚Ä¢ üìû –ö–æ–Ω—Ç–∞–∫—Ç\n\n"
            "_–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã_"
        )
        await update.message.reply_text(response, parse_mode='Markdown')

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞
        application = Application.builder().token(TOKEN).build()

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        application.add_handler(CommandHandler("start", start))
        application.add_handler(CommandHandler("help", help_command))
        application.add_handler(CommandHandler("about", about_command))
        application.add_handler(CommandHandler("delivery", delivery_command))
        application.add_handler(CommandHandler("effects", effects_command))
        application.add_handler(CommandHandler("history", history_command))
        application.add_handler(CommandHandler("contact", contact_command))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook
        port = int(os.getenv('PORT', 8080))
        logger.info(f"Setting webhook to {WEBHOOK_URL}")
        application.run_webhook(
            listen="0.0.0.0",
            port=port,
            webhook_url=WEBHOOK_URL,
            secret_token="your-secret-path",  # –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ–∫–µ–Ω
            drop_pending_updates=True  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        )
    except Exception as e:
        logger.error(f"Error starting bot: {e}")
        raise

if __name__ == "__main__":
    main() 